@page
@model Web.Views.IndexModel

<!-- CSS Design-->
<style>
    .pokemon-list {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        margin-top: 20px;
    }

    .pokemon-columns {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .pokemon-card {
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 15px;
        text-align: center;
        width: 200px;
        height: 280px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        .pokemon-card img {
            max-height: 150px;
            margin-bottom: 10px;
        }

    .pokemon-name {
        font-size: 18px;
        text-transform: uppercase;
    }

    .search-bar {
        margin-bottom: 20px;
        text-align: left;
        display: flex; 
        gap: 20px; 
    }

    .search-input {
        padding: 10px;
        width: 500px; 
        font-size: 16px;
    }

    .search-button {
        padding: 10px;
        font-size: 16px;
        cursor: pointer;
    }

    .no-results {
        text-align: center;
        margin-top: 20px;
    }
</style>

<div class="search-bar">
    <input class="search-input" type="text" placeholder="Search Pokémon" id="searchQuery" />
    <button class="search-button" onclick="onSearchClick()">Search</button>
</div>

@if (Model.AllPokemonDTO != null && Model.AllPokemonDTO.Count > 0)
{
    @if (string.IsNullOrEmpty(Model.SearchQuery))
    {
        <div id="pokemonContainer" class="pokemon-list">
            <div class="pokemon-columns">
                @foreach (var pokemon in Model.AllPokemonDTO.OrderBy(p => p.Name))
                {
                    <div class="pokemon-card">
                        <img src="@pokemon.Sprites.FrontDefault" alt="Front Sprite" />
                        <div class="pokemon-name">@pokemon.Name.ToUpper()</div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="search-results">
            <div class="search-columns">
                @foreach (var pokemon in Model.AllPokemonDTO.OrderBy(p => p.Name))
                {
                    <div class="search-card">
                        <img src="@pokemon.Sprites.FrontDefault" alt="Front Sprite" />
                        <div class="search-name">@pokemon.Name.ToUpper()</div>
                    </div>
                }
            </div>
        </div>
    }
}
else
{
    <div class="no-results">
        <p>No Pokémon found.</p>
    </div>
}

<!-- Javascript Search Functionality In Web -->
<script>
    function onSearchClick() {
        var searchQuery = document.getElementById('searchQuery').value.toLowerCase();

        // Log the search query to the console
        console.log("Search query: ", searchQuery);

        // Filter the Pokemon list based on the search query
        var filteredPokemon = @Json.Serialize(Model.AllPokemonDTO)
                .filter(pokemon => pokemon.name.toLowerCase().includes(searchQuery));

        // Update the view with the filtered Pokemon list
        updatePokemonView(filteredPokemon);
    }

    function updatePokemonView(filteredPokemon) {
        var pokemonContainer = document.getElementById('pokemonContainer');
        pokemonContainer.innerHTML = '';

        filteredPokemon.forEach(pokemon => {
            var pokemonCard = document.createElement('div');
            pokemonCard.className = 'pokemon-card';

            // Pass the Pokemon ID to the onCardClick function
            pokemonCard.onclick = function () {
                onCardClick(pokemon.id);
            };

            var pokemonName = document.createElement('div');
            pokemonName.className = 'pokemon-name';
            pokemonName.innerText = pokemon.name.toUpperCase();

            var pokemonImage = document.createElement('img');
            pokemonImage.src = pokemon.sprites.frontDefault;
            pokemonImage.alt = 'Front Sprite';

            pokemonCard.appendChild(pokemonName);
            pokemonCard.appendChild(pokemonImage);

            pokemonContainer.appendChild(pokemonCard);
        });
    }
</script>